apply plugin: 'eclipse'

eclipse {
    pathVariables 'GRADLE_USER_HOME': gradle.gradleUserHomeDir
    classpath {
        downloadSources=true
    }
}

tasks.eclipseJdt {
    assert "org.eclipse.jdt.core.prefs" == outputFile.name
    ext.originalOutputFile = outputFile
    outputFile = (outputFile.absolutePath + ".tmp") as File
}
tasks.eclipseJdt << {
    assert "org.eclipse.jdt.core.prefs.tmp" == outputFile.name
    assert "org.eclipse.jdt.core.prefs" == ext.originalOutputFile.name
    List lines = outputFile.readLines("UTF-8")
    Collections.sort(lines)
    ext.originalOutputFile.withWriter("UTF-8") { writer ->
        lines.each { line ->
            writer << line
            writer << "\r\n"
        }
    }
    assert outputFile.delete()
}

eclipse {
    jdt {
        file {
            withProperties { properties ->
                def formatter = new XmlSlurper().parse('./gradle/eclipse/formatter.xml')

                formatter.profile.setting.each {
                    properties.put(it.@id as String, it.@value as String)
                }

                properties.put('org.eclipse.jdt.core.compiler.codegen.targetPlatform', compileJava.sourceCompatibility)
                properties.put('org.eclipse.jdt.core.compiler.source', compileJava.sourceCompatibility)
                properties.put('org.eclipse.jdt.core.compiler.compliance', compileJava.targetCompatibility)
            }
        }
    }
}
