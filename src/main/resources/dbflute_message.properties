
# ========================================================================================
#                                                                        Framework Default
#                                                                        =================
# ----------------------------------------------------------
#                                               Lasta Taglib
#                                               ------------
errors.header=<font color="red"><ul>
errors.footer=</ul></font>
errors.prefix=<li>
errors.suffix=</li>

# ----------------------------------------------------------
#                                            Javax Validator
#                                            ---------------
constraints.AssertFalse.message = must be false
constraints.AssertTrue.message  = must be true
constraints.DecimalMax.message  = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
constraints.DecimalMin.message  = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
constraints.Digits.message      = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
constraints.Future.message      = must be in the future
constraints.Max.message         = must be less than or equal to {value}
constraints.Min.message         = must be greater than or equal to {value}
constraints.NotNull.message     = may not be null
constraints.Null.message        = must be null
constraints.Past.message        = must be in the past
constraints.Pattern.message     = must match "{regexp}"
constraints.Size.message        = size must be between {min} and {max}

# ----------------------------------------------------------
#                                        Hibernate Validator
#                                        -------------------
constraints.CreditCardNumber.message        = invalid credit card number
constraints.EAN.message                     = invalid {type} barcode
constraints.Email.message                   = not a well-formed email address
constraints.Length.message                  = length must be between {min} and {max}
constraints.LuhnCheck.message               = The check digit for ${value} is invalid, Luhn Modulo 10 checksum failed
constraints.Mod10Check.message              = The check digit for ${value} is invalid, Modulo 10 checksum failed
constraints.Mod11Check.message              = The check digit for ${value} is invalid, Modulo 11 checksum failed
constraints.ModCheck.message                = The check digit for ${value} is invalid, ${modType} checksum failed
constraints.NotBlank.message                = may not be empty
constraints.NotEmpty.message                = may not be empty
constraints.ParametersScriptAssert.message  = script expression "{script}" didn't evaluate to true
constraints.Range.message                   = must be between {min} and {max}
constraints.SafeHtml.message                = may have unsafe html content
constraints.ScriptAssert.message            = script expression "{script}" didn't evaluate to true
constraints.URL.message                     = must be a valid URL


# ========================================================================================
#                                                                           Project Common
#                                                                           ==============
# ----------------------------------------------------------
#                                              Value Message
#                                              -------------
errors.number=input number for {0}
errors.same.value=same value is selected in {0}
errors.greater.than=input {0} greater than {1}
errors.required.at.least.one=input {0} at least one
errors.required.or=input either {0} or {1}
errors.upload.size=Uploading failed, because actual size {0} bytes exceeded limit size {1} bytes.

# ----------------------------------------------------------
#                                           Business Message
#                                           ----------------
errors.empty.login=input mail address or password
errors.not.login=invalid mail address or password
errors.email.exists=mail address already registered
errors.already.registered={0} is already-regsitered {1}

# ----------------------------------------------------------
#                                      Application Exception
#                                      ---------------------
errors.app.illegal.transition=retry because of illegal transition
errors.app.already.deleted=others might be updated, so retry
errors.app.already.updated=others might be updated, so retry
errors.app.already.exists=already existing data, so retry


# ========================================================================================
#                                                                              Information
#                                                                              ===========
