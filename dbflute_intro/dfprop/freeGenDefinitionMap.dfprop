map:{
    # ====================================================================================
    #                                                                              Dbflute
    #                                                                              =======
    ; DbfluteEnvGen = map:{
        ; resourceMap = map:{
            ; baseDir = ../src/main
            ; resourceType = PROP ; resourceFile = $$baseDir$$/resources/dbflute_env.properties
        }
        ; outputMap = map:{
            ; templateFile = SystemConfig.vm ; outputDirectory = $$baseDir$$/java
            ; package = org.dbflute.intro.mylasta.direction ; className = DbfluteEnv
        }
        ; tableMap = map:{
            ; exceptKeyList = list:{} ; groupingKeyMap = map:{}
            ; superClassPackage = org.dbflute.lastaflute.core.direction
            ; superClassSimpleName = ObjectiveConfig
        }
    }
    ; DbfluteConfigGen = map:{
        ; resourceMap = map:{
            ; baseDir = ../src/main
            ; resourceType = PROP ; resourceFile = $$baseDir$$/resources/dbflute_config.properties
        }
        ; outputMap = map:{
            ; templateFile = SystemConfig.vm ; outputDirectory = $$baseDir$$/java
            ; package = org.dbflute.intro.mylasta.direction ; className = DbfluteConfig
        }
        ; tableMap = map:{
            ; exceptKeyList = list:{} ; groupingKeyMap = map:{}
            ; extendsPropRequest = DbfluteEnvGen
            ; isCheckImplicitOverride = true
            ; interfacePackage = org.dbflute.intro.mylasta.direction ; interfaceSimpleName = DbfluteEnv
            ; superClassPackage = org.dbflute.intro.mylasta.direction ; superClassSimpleName = DbfluteEnv.SimpleImpl
        }
    }
    ; DbfluteLabelGen = map:{
        ; resourceMap = map:{
            ; baseDir = ../src/main
            ; resourceType = PROP ; resourceFile = $$baseDir$$/resources/dbflute_label.properties
        }
        ; outputMap = map:{
            ; templateFile = UserMessages.vm ; outputDirectory = $$baseDir$$/java
            ; package = org.dbflute.intro.mylasta.action ; className = DbfluteLabels
        }
        ; tableMap = map:{
            ; groupingKeyMap = map:{ label = prefix:labels. }
        }
    }
    ; DbfluteMessageGen = map:{
        ; resourceMap = map:{
            ; baseDir = ../src/main
            ; resourceType = PROP ; resourceFile = $$baseDir$$/resources/dbflute_message.properties
        }
        ; outputMap = map:{
            ; templateFile = UserMessages.vm ; outputDirectory = $$baseDir$$/java
            ; package = org.dbflute.intro.mylasta.action ; className = DbfluteMessages
        }
        ; tableMap = map:{
            ; groupingKeyMap = map:{ label = prefix:labels. }
            ; extendsPropRequest = DbfluteLabelGen
            ; isCheckImplicitOverride = true ; isUseNonNumberVariable = true
            ; superClassPackage = org.dbflute.intro.mylasta.action ; superClassSimpleName = DbfluteLabels
        }
    }

    # ====================================================================================
    #                                                                        Dbflute Intro
    #                                                                        =============
    ; DbfluteIntroEnvGen = map:{
        ; resourceMap = map:{
            ; baseDir = ../src/main
            ; resourceType = PROP ; resourceFile = $$baseDir$$/resources/dbfluteIntro_env.properties
        }
        ; outputMap = map:{
            ; templateFile = SystemConfig.vm ; outputDirectory = $$baseDir$$/java
            ; package = org.dbflute.intro.mylasta.direction ; className = DbfluteIntroEnv
        }
        ; tableMap = map:{
            ; exceptKeyList = list:{} ; groupingKeyMap = map:{}
            ; interfacePackage = org.dbflute.intro.mylasta.direction ; interfaceSimpleName = DbfluteConfig
            ; superClassPackage = org.dbflute.intro.mylasta.direction ; superClassSimpleName = DbfluteConfig.SimpleImpl
        }
    }
    ; DbfluteIntroConfigGen = map:{
        ; resourceMap = map:{
            ; baseDir = ../src/main
            ; resourceType = PROP ; resourceFile = $$baseDir$$/resources/dbfluteIntro_config.properties
        }
        ; outputMap = map:{
            ; templateFile = SystemConfig.vm ; outputDirectory = $$baseDir$$/java
            ; package = org.dbflute.intro.mylasta.direction ; className = DbfluteIntroConfig
        }
        ; tableMap = map:{
            ; exceptKeyList = list:{} ; groupingKeyMap = map:{}
            ; extendsPropRequest = DbfluteConfigGen
            ; isCheckImplicitOverride = true ; isUseNonNumberVariable = true
            ; interfacePackage = org.dbflute.intro.mylasta.direction ; interfaceSimpleName = DbfluteIntroEnv
            ; superClassPackage = org.dbflute.intro.mylasta.direction ; superClassSimpleName = DbfluteIntroEnv.SimpleImpl
        }
    }
    ; DbfluteIntroLabelGen = map:{
        ; resourceMap = map:{
            ; baseDir = ../src/main
            ; resourceType = PROP ; resourceFile = $$baseDir$$/resources/dbfluteIntro_label.properties
        }
        ; outputMap = map:{
            ; templateFile = UserMessages.vm ; outputDirectory = $$baseDir$$/java
            ; package = org.dbflute.intro.mylasta.action ; className = DbfluteIntroLabels
        }
        ; tableMap = map:{
            ; groupingKeyMap = map:{ label = prefix:labels. }
            ; extendsPropRequest = DbfluteMessageGen
            ; isCheckImplicitOverride = true ; isUseNonNumberVariable = true
            ; superClassPackage = org.dbflute.intro.mylasta.action ; superClassSimpleName = DbfluteMessages
        }
    }
    ; DbfluteIntroMessageGen = map:{
        ; resourceMap = map:{
            ; baseDir = ../src/main
            ; resourceType = PROP ; resourceFile = $$baseDir$$/resources/dbfluteIntro_message.properties
        }
        ; outputMap = map:{
            ; templateFile = UserMessages.vm ; outputDirectory = $$baseDir$$/java
            ; package = org.dbflute.intro.mylasta.action ; className = DbfluteIntroMessages
        }
        ; tableMap = map:{
            ; groupingKeyMap = map:{ label = prefix:labels. }
            ; extendsPropRequest = DbfluteIntroLabelGen
            ; isCheckImplicitOverride = true ; isUseNonNumberVariable = true
            ; superClassPackage = org.dbflute.intro.mylasta.action ; superClassSimpleName = DbfluteIntroLabels
        }
    }
}
